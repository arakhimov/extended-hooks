{"version":3,"sources":["reportWebVitals.js","app/components/common/container.jsx","app/components/ui/navBar.jsx","app/components/common/blockQuote.jsx","app/components/common/Card.jsx","app/components/common/collapse.jsx","app/components/common/divider.jsx","app/components/common/typografy/smallTitle.jsx","app/components/common/typografy/subtitle.jsx","app/components/common/typografy/title.jsx","app/components/common/form/textField.jsx","app/components/examples/cloneElement/cloneElementExample.jsx","app/layouts/cloneElement.jsx","app/components/examples/hoc/simpleComponent.jsx","app/components/examples/hoc/someComponent.jsx","app/components/examples/hoc/withAuth.jsx","app/components/examples/hoc/withCardAndAuth.jsx","app/components/examples/hoc/withPropsStyles.jsx","app/components/examples/hoc/hocExample.jsx","app/components/exercises/hocExercise.jsx","app/layouts/hoc.jsx","app/layouts/main.jsx","app/components/examples/memo/memoWithUseCallbackExample.jsx","app/components/examples/memo/memoDependencyFunctionExample.jsx","app/layouts/memo.jsx","app/components/examples/children/reactChildrenExample.jsx","app/components/exercises/childrenExercise.jsx","app/layouts/reactChildren.jsx","app/components/examples/useCallback/useCallBackExample.jsx","app/layouts/useCallback.jsx","app/components/examples/useMemo/complexCalculate.jsx","app/layouts/useMemo.jsx","app/components/examples/useRef/prevState.jsx","app/components/examples/useRef/programmablActions.jsx","app/components/examples/useRef/renderCount.jsx","app/components/exercises/useRefExercise.jsx","app/layouts/useRef.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ContainerWrapper","children","className","style","paddingBottom","NavBar","aria-current","to","BlockQuoteWrapper","clonedChildren","React","Children","map","child","config","type","props","cloneElement","CardWrapper","CollapseWrapper","title","name","useState","display","setDisaplay","collapseRef","useRef","useEffect","newCollapse","BsCollapse","current","toggle","show","hide","onClick","prevState","ref","id","defaultProps","Divider","SmallTitle","Subtitle","Title","TextField","label","value","onChange","error","showPassword","setShowPassword","htmlFor","target","field","CloneElementExample","Card","console","log","SimpleComponent","onLogin","onLogOut","isAuth","SomeComponent","withAuth","Component","localStorage","getItem","withCardAndAuth","JSON","parse","setIsAuth","setItem","stringify","withPropsStyles","ComponentWithAuth","ComponentWithPropsStyles","ComposedComponent","SimpleComponentWithCardAndAuth","HOCExample","HocExercise","HOCLayout","Main","LogOutButton","onLogOot","areEqual","nextState","handleLogOut","proppTypes","PropTypes","func","MemoizedLogOutButton","memo","MemoWithUseCallbackExample","useCallback","removeItem","setState","MemoDependencyFunctionExample","MemoExample","pathname","FormComponent","state","handleChange","ReactChildrenExample","ComponentList","ind","ChildrenExercise","ReactChildren","UseCallBackExample","data","setData","withOutCallback","withCallback","validateWithOutCallback","validateWithCallback","action","email","UseCalbackExample","factorial","n","ComplexCalculateExample","setValue","fact","useMemo","otherState","setOtherState","buttonColor","UseMemoExample","PrevStateExample","currentState","setCurrentState","ProgrammablActionsExample","inputRef","focus","width","RenderCountExample","renderCount","UseRefExercise","blockRef","height","color","textContent","UseRefExample","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc5dd13f.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst ContainerWrapper = ({ children }) => {\n    return (\n        <div className=\"container mt-4\" style={{ paddingBottom: 60 }}>\n            {children}\n        </div>\n    );\n};\nContainerWrapper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default ContainerWrapper;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul className=\"nav\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/extended-hooks\">\n            Main\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/useRef\">\n            useRef\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/useMemo\">\n            useMemo\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/useCallback\">\n            useCallback\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/hoc\">\n            HOC\n          </NavLink>\n        </li>\n\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/memo\">\n            React.memo\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/cloneElement\">\n            React.cloneElement\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/extended-hooks/children\">\n            React Children\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BlockQuoteWrapper = ({ children }) => {\n    const clonedChildren = React.Children.map(children, (child) => {\n        let config = {};\n        if (child.type === \"p\") {\n            config = { ...child.props, className: \"mt-3\" };\n        }\n        if (child.type === \"figcaption\") {\n            config = { ...child.props, className: \"blockquote-footer\" };\n        }\n        return React.cloneElement(child, config);\n    });\n    return (\n        <figure>\n            <blockquote>{clonedChildren} </blockquote>\n        </figure>\n    );\n};\nBlockQuoteWrapper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default BlockQuoteWrapper;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nconst CardWrapper = ({ children }) => {\n    return (\n        <div className=\"card my-2\">\n            <div className=\"card-body\">{children}</div>\n        </div>\n    );\n};\n\nCardWrapper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default CardWrapper;\n","import { Collapse as BsCollapse } from \"bootstrap\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useRef, useState } from \"react\";\nconst CollapseWrapper = ({ children, title, name }) => {\n  const [display, setDisaplay] = useState(false);\n  const collapseRef = useRef();\n  const toggleDisplay = () => {\n    setDisaplay(prevState => !prevState);\n  };\n  useEffect(() => {\n    const newCollapse = new BsCollapse(collapseRef.current, {\n      toggle: false\n    });\n    display ? newCollapse.show() : newCollapse.hide();\n  }, [display]);\n\n  return (\n    <div className=\"card  my-2\">\n      <div className=\"card-body\">\n        <div className=\"d-flex justify-content-between\">\n          {title}\n          <i\n            className={\"bi bi-caret-\" + (!display ? \"down-fill\" : \"up-fill\")}\n            onClick={toggleDisplay}\n          ></i>\n        </div>\n        <div className=\"collapse\" ref={collapseRef} id={name + title}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\nCollapseWrapper.defaultProps = {\n  title: \"Информация\"\n};\nCollapseWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  title: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default CollapseWrapper;\n","import React from \"react\";\nconst Divider = () => {\n    return <hr />;\n};\n\nexport default Divider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SmallTitle = ({ children }) => {\n    return <h5 className=\"card-title\">{children}</h5>;\n};\nSmallTitle.propTypes = {\n    children: PropTypes.node\n};\nexport default SmallTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Subtitle = ({ children }) => {\n    return <h3>{children}</h3>;\n};\nSubtitle.propTypes = {\n    children: PropTypes.node\n};\nexport default Subtitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Title = ({ children }) => {\n    return <h1>{children}</h1>;\n};\nTitle.propTypes = {\n    children: PropTypes.node\n};\nexport default Title;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport TextField from \"../../common/form/textField\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst field = <TextField label=\"email\" name=\"email\" />;\n\nconst CloneElementExample = () => {\n  const handleChange = target => {\n    console.log(\"change\", target);\n  };\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Пример</SmallTitle>\n      {field}\n      {React.cloneElement(field, { label: \"Clone email\", onChange: handleChange })}\n    </CardWrapper>\n  );\n};\n\nexport { CloneElementExample };\n","import React from \"react\";\nimport BlockQuote from \"../components/common/blockQuote\";\nimport CardWrapper from \"../components/common/Card\";\nimport CollapseWrapper from \"../components/common/collapse\";\nimport Divider from \"../components/common/divider\";\nimport SmallTitle from \"../components/common/typografy/smallTitle\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport Title from \"../components/common/typografy/title\";\nimport { CloneElementExample as Example } from \"../components/examples/cloneElement/cloneElementExample\";\nconst CloneElementExample = () => {\n    return (\n        <>\n            <Title>React.cloneElement</Title>\n            <CollapseWrapper>\n                <BlockQuote>\n                    <p>\n                        Клонирует и возвращает новый React элемент, используя\n                        элемент в качестве отправной точки. config должен\n                        содержать все новые пропсы, key, а также ref. Полученный\n                        элемент будет иметь пропсы исходного элемента, а новые\n                        пропсы будут поверхностно слиты воедино. Новые дочерние\n                        элементы заменят существующие. key и ref из исходного\n                        элемента будут сохранены, если в config не было передано\n                        key and ref.\n                    </p>\n\n                    <figcaption>\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuote>\n            </CollapseWrapper>\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i>{\" \"}\n                <code>\n                    React.cloneElement( element, [config], [...children] )\n                </code>\n            </CardWrapper>\n            <CollapseWrapper title=\"Когда использовать\">\n                <SmallTitle>Если</SmallTitle>\n                <ul>\n                    <li>Невозможно изменить параметры</li>\n                    <li>Необходимо изменить или добавить параметры</li>\n                </ul>\n            </CollapseWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n            <Example />\n        </>\n    );\n};\n\nexport default CloneElementExample;\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst SimpleComponent = ({ onLogin, onLogOut, isAuth }) => {\r\n  return (\r\n    <>\r\n      {isAuth ? (\r\n        <button type=\"button\" onClick={onLogOut} className=\"btn btn-danger\">\r\n          Выйти из системы\r\n        </button>\r\n      ) : (\r\n        <button type=\"button\" onClick={onLogin} className=\"btn btn-primary\">\r\n          Войти\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nSimpleComponent.propTypes = {\r\n  onLogOut: PropTypes.func,\r\n  onLogin: PropTypes.func,\r\n  isAuth: PropTypes.bool\r\n};\r\n\r\nexport default SimpleComponent;\r\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport Subtitle from \"../../common/typografy/subtitle\";\n\nconst SomeComponent = ({ name }) => {\n    return <Subtitle>{name || \"Component\"}</Subtitle>;\n};\nSomeComponent.propTypes = {\n    name: PropTypes.string\n};\nexport default SomeComponent;\n","import React from \"react\";\r\nimport SmallTitle from \"../../common/typografy/smallTitle\";\r\n\r\nconst withAuth = Component => props => {\r\n  const isAuth = localStorage.getItem(\"Auth\");\r\n  return isAuth ? <Component {...props} /> : <SmallTitle>Auth</SmallTitle>;\r\n};\r\n\r\nexport default withAuth;\r\n","import React, { useState } from \"react\";\r\nimport CardWrapper from \"../../common/Card\";\r\n\r\nconst withCardAndAuth = Component => props => {\r\n  const [isAuth, setIsAuth] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n\r\n  const handleLogin = () => {\r\n    localStorage.setItem(\"user\", JSON.stringify(isAuth));\r\n    setIsAuth(prevState => !prevState);\r\n  };\r\n  const handleLogOut = () => {\r\n    localStorage.setItem(\"user\", JSON.stringify(isAuth));\r\n    setIsAuth(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Component {...props} isAuth={isAuth} onLogin={handleLogin} onLogOut={handleLogOut} />\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default withCardAndAuth;\r\n","import React from \"react\";\r\nimport CardWrapper from \"../../common/Card\";\r\n\r\nconst withPropsStyles = Component => props => {\r\n  return (\r\n    <CardWrapper>\r\n      <Component {...props} name=\"AR Component\" />\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default withPropsStyles;\r\n","import React from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport Divider from \"../../common/divider\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport SimpleComponent from \"./simpleComponent\";\nimport Component from \"./someComponent\";\nimport withAuth from \"./withAuth\";\nimport withCardAndAuth from \"./withCardAndAuth\";\nimport withPropsStyles from \"./withPropsStyles\";\n\nconst ComponentWithAuth = withAuth(Component);\nconst ComponentWithPropsStyles = withPropsStyles(Component);\nconst ComposedComponent = withPropsStyles(withAuth(Component));\nconst SimpleComponentWithCardAndAuth = withCardAndAuth(SimpleComponent);\n\nconst HOCExample = () => {\n  return (\n    <>\n      <CardWrapper>\n        <SmallTitle>1. Обычный компонент</SmallTitle>\n        <Divider />\n        <Component />\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>2. Функциональный HOC</SmallTitle>\n        <Divider />\n        <ComponentWithAuth />\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>3. HOC With Styles and Props</SmallTitle>\n        <Divider />\n        <ComponentWithPropsStyles />\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>4. Composed HOC</SmallTitle>\n        <Divider />\n        <ComposedComponent />\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>Exercise</SmallTitle>\n        <Divider />\n        <SimpleComponentWithCardAndAuth />\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default HOCExample;\n","import React from \"react\";\nimport CollapseWrapper from \"../common/collapse\";\n\nconst HocExercise = () => {\n    return (\n        <CollapseWrapper title=\"Упражнение\">\n            <p className=\"mt-3\">\n                Вам необходимо реализовать компонент{\" \"}\n                <code>SimpleComponent</code>, который:\n            </p>\n            <ul>\n                <li>\n                    Имеет параметры:<code>onLogin</code>, <code>onLogOut</code>,{\" \"}\n                    <code>isAuth</code>\n                </li>\n                <li>\n                    Отображайте кнопку <code>Войти</code>, если пользователь НЕ\n                    авторизован.\n                </li>\n                <li>\n                    Отображает кнопку с содержанием{\" \"}\n                    <code>Выйти из системы</code>, если пользователь\n                    авторизован.\n                </li>\n                <li>\n                    При нажатии на кнопки вызываются методы <code>onLogin</code>{\" \"}\n                    и <code>onLogOut</code>\n                </li>\n            </ul>\n            <p className=\"mt-3\">\n                Вам необходимо <code>HOC</code>, который модицифицует компонент{\" \"}\n                <code>SimpleComponent</code> следующим образом:\n            </p>\n            <ul>\n                <li>\n                    Добавляет обертку в виде карточки boostrap (использовать\n                    существующий HOC)\n                </li>\n                <li>\n                    Передает параметр <code>isAuth</code>, который является\n                    результатом проверки наличия записи с названием{\" \"}\n                    <code>user</code> в <code>localStorage</code>\n                </li>\n                <li>\n                    Передает параметр <code>onLogin</code> и{\" \"}\n                    <code>onLogOut</code> для управления записью с названием{\" \"}\n                    <code>user</code> в <code>localStorage</code>\n                </li>\n            </ul>\n        </CollapseWrapper>\n    );\n};\n\nexport default HocExercise;\n","import Collapse from \"../components/common/collapse\";\nimport React from \"react\";\nimport HOCExample from \"../components/examples/hoc/hocExample\";\nimport CardWrapper from \"../components/common/Card\";\nimport HocExercise from \"../components/exercises/hocExercise\";\nimport BlockQuoteWrapper from \"../components/common/blockQuote\";\nimport Title from \"../components/common/typografy/title\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport Divider from \"../components/common/divider\";\nconst HOCLayout = () => {\n    return (\n        <>\n            <Title>HOC</Title>\n            <Collapse title=\"Информация\">\n                <BlockQuoteWrapper>\n                    <p>\n                        Аргументы: callBack , [array of dependencies]\n                        <br />\n                        Возвращает: Закэшированное значение выполненной функции,\n                        которое обновляется только при изменении зависимостей.\n                    </p>\n\n                    <figcaption>\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuoteWrapper>\n            </Collapse>\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i> add{\" \"}\n                <code>&quot;react/display-name&quot;: &quot;off&quot;</code> to\n                EsLint rules\n            </CardWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n            <HOCExample />\n            <Divider />\n            <Subtitle>Упражнения</Subtitle>\n            <HocExercise />\n        </>\n    );\n};\nexport default HOCLayout;\n","import React from \"react\";\nimport Title from \"../components/common/typografy/title\";\n\nconst Main = () => {\n    return (\n        <>\n            {\" \"}\n            <Title> Extended Hooks и Оптимизация</Title>\n        </>\n    );\n};\n\nexport default Main;\n","import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nconst LogOutButton = ({ onLogOot }) => {\n  useEffect(() => {\n    console.log(\"render button\");\n  });\n\n  return (\n    <button className=\"btn btn-danger\" type=\"button\" onClick={onLogOot}>\n      logOut\n    </button>\n  );\n};\n\nLogOutButton.proppTypes = {\n  onLogOot: PropTypes.func\n};\n\nfunction areEqual(prevState, nextState) {\n  if (prevState.handleLogOut !== nextState.handleLogOut) {\n    return false;\n  }\n  return true;\n}\n\nconst MemoizedLogOutButton = React.memo(LogOutButton, areEqual);\n\nconst MemoWithUseCallbackExample = props => {\n  const handleLogOut = useCallback(() => {\n    localStorage.removeItem(\"Auth\");\n  }, [props]);\n\n  const [state, setState] = useState(false);\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary me-2\"\n        type=\"button\"\n        onClick={() => setState(prevState => !prevState)}\n      >\n        initiate rerender\n      </button>\n      <MemoizedLogOutButton onLogOot={handleLogOut} />\n    </>\n  );\n};\n\nexport default MemoWithUseCallbackExample;\n","const MemoDependencyFunctionExample = (props) => {\n    return null;\n};\n\nexport default MemoDependencyFunctionExample;\n","import React from \"react\";\nimport CollapseWrapper from \"../components/common/collapse\";\nimport CardWrapper from \"../components/common/Card\";\nimport MemoWithUseCallbackExample from \"../components/examples/memo/memoWithUseCallbackExample\";\nimport { Link } from \"react-router-dom\";\nimport MemoDependencyFunctionExample from \"../components/examples/memo/memoDependencyFunctionExample\";\nimport BlockQuoteWrapper from \"../components/common/blockQuote\";\nimport Title from \"../components/common/typografy/title\";\nimport Divider from \"../components/common/divider\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport SmallTitle from \"../components/common/typografy/smallTitle\";\nconst MemoExample = () => {\n    return (\n        <>\n            <Title>React.Memo</Title>\n            <CollapseWrapper>\n                <BlockQuoteWrapper>\n                    <p>\n                        <code>React.Memo</code> - это higher order component.\n                        <br />\n                        Если ваш компонент всегда рендерит одно и то же при\n                        неменяющихся пропсах, вы можете обернуть его в вызов\n                        React.memo для повышения производительности в некоторых\n                        случаях, мемоизируя тем самым результат. Это значит, что\n                        React будет использовать результат последнего рендера,\n                        избегая повторного рендеринга.\n                        <br />\n                        Говоря просто, компонент высшего порядка — это функция,\n                        которая принимает компонент и возвращает новый\n                        компонент.\n                    </p>\n\n                    <figcaption>\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuoteWrapper>\n            </CollapseWrapper>\n\n            <CollapseWrapper title=\"Когда использовать\">\n                <SmallTitle>Если компонент</SmallTitle>\n                <ul>\n                    <li>Часто ререндерится</li>\n                    <li>\n                        Компоненту передаются одинаковые параметры при\n                        нескольких ререндерах\n                    </li>\n                    <li> Не имеет собственного состояния</li>\n                </ul>\n            </CollapseWrapper>\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i> Если функциональный\n                компонент обёрнут в <code>React.memo</code> и использует{\" \"}\n                <code>useState, useReducer или useContext</code>, он будет\n                повторно рендериться при изменении состояния или контекста.\n            </CardWrapper>\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i> Функциональный объект равен\n                только самому себе\n            </CardWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n            <CardWrapper>\n                <SmallTitle>Memo with useCallback</SmallTitle>\n                <MemoWithUseCallbackExample />\n            </CardWrapper>\n            <CardWrapper>\n                {\" \"}\n                <SmallTitle>Memo dependency function</SmallTitle>\n                <CardWrapper>\n                    <i className=\"bi bi-lightbulb\"></i> Если функция для сверки\n                    не задана, то выполняется поверхностная сверка по{\" \"}\n                    <Link\n                        to={{\n                            pathname:\n                                \"https://github.com/facebook/react/blob/v16.8.6/packages/shared/shallowEqual.js\"\n                        }}\n                        target=\"_blank\"\n                    >\n                        стандартному алгоритму\n                    </Link>\n                </CardWrapper>\n                <MemoDependencyFunctionExample />\n            </CardWrapper>\n        </>\n    );\n};\n\nexport default MemoExample;\n","import PropTypes, { node } from \"prop-types\";\nimport React, { useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport Divider from \"../../common/divider\";\nimport TextField from \"../../common/form/textField\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst FormComponent = ({ children }) => {\n  const [state, setState] = useState({});\n  const handleChange = target => {\n    setState(prevState => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  return React.Children.map(children, child => {\n    const config = {\n      ...child.props,\n      onChange: handleChange,\n      value: state[child.props.name] || \"\"\n    };\n\n    return React.cloneElement(child, config);\n  });\n};\n\nFormComponent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(node), PropTypes.node])\n};\n\nconst ReactChildrenExample = () => {\n  return (\n    <CardWrapper>\n      <SmallTitle>Clone form and add props</SmallTitle>\n      <Divider />\n      <FormComponent>\n        <TextField name=\"email\" label=\"email\" />\n        <TextField name=\"password\" label=\"Пароль\" type=\"password\" />\n      </FormComponent>\n    </CardWrapper>\n  );\n};\n\nexport default ReactChildrenExample;\n","import React from \"react\";\nimport CollapseWrapper from \"../common/collapse\";\n\nconst ComponentList = ({ children }) => {\n  return React.Children.map(children, (child, ind) => {\n    return (\n      <div className=\"d-flex\">\n        <span className=\"me-2\">{ind + 1}</span>\n        {child}\n      </div>\n    );\n  });\n};\n\nconst ChildrenExercise = () => {\n  return (\n    <CollapseWrapper title=\"Упражнение\">\n      <p className=\"mt-3\">\n        У вас есть компоненты Списка. Вам необходимо к каждому из них добавить порядковый номер,\n        относительно того, как они располагаются на странице. Вы можете использовать как{\" \"}\n        <code>React.Children.map</code> так и <code>React.Children.toArray</code>\n      </p>\n      <ComponentList>\n        <Component />\n        <Component />\n        <Component />\n      </ComponentList>\n    </CollapseWrapper>\n  );\n};\n\nconst Component = ({ children }) => {\n  return <div>Компонент списка</div>;\n};\n\nexport default ChildrenExercise;\n","import React from \"react\";\nimport BlockQuoteWrapper from \"../components/common/blockQuote\";\nimport CardWrapper from \"../components/common/Card\";\n\nimport CollapseWrapper from \"../components/common/collapse\";\nimport Divider from \"../components/common/divider\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport ReactChildrenExample from \"../components/examples/children/reactChildrenExample\";\nimport ChildrenExercise from \"../components/exercises/childrenExercise\";\nconst ReactChildren = () => {\n    return (\n        <>\n            <h1>Children</h1>\n\n            <CollapseWrapper title=\"Что такое Children\">\n                <figure>\n                    <blockquote>\n                        <p className=\"mt-3\">\n                            <code> props.children </code>- Это объект,\n                            содержащий описание детей.\n                        </p>\n                        <p>\n                            <code>children</code> - не настоящие дети, не\n                            компоненты, это описание содержания детей. Mы не\n                            можем изменять какие-либо параметры или\n                            редактировать какие-либо функции. Мы имеем доступ\n                            только к чтению.\n                        </p>\n                    </blockquote>\n                </figure>\n            </CollapseWrapper>\n\n            <CollapseWrapper title=\"React.children\">\n                <figure>\n                    <blockquote>\n                        <p className=\"mt-3\">\n                            <code>React.Children</code> - это утилита,\n                            предоставляемая React, которая предоставляет функции\n                            для работы с непрозрачной структурой данных\n                            this.props.children.\n                        </p>\n                    </blockquote>\n                </figure>\n            </CollapseWrapper>\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i>Если <code>children</code> —\n                это\n                <code>Fragment</code>, он будет рассматриваться как целый\n                потомок, а элементы внутри не будут пройдены.\n            </CardWrapper>\n\n            <CollapseWrapper title=\"React.children Functions\">\n                <CollapseWrapper title=\"React.Children.map\">\n                    <BlockQuoteWrapper>\n                        <p className=\"mt-3\">\n                            <code>\n                                React.Children.map(children,\n                                function[(thisArg)])\n                            </code>\n                            <br />\n                            Вызывает функцию для каждого непосредственного\n                            потомка, содержащегося в children, передавая их по\n                            очереди в thisArg. Если children — это массив, он\n                            будет пройден, и функция будет вызвана для каждого\n                            потомка в массиве. Если children равен null или\n                            undefined, этот метод вернёт null или undefined, а\n                            не массив.\n                        </p>\n                        <p></p>\n                    </BlockQuoteWrapper>\n                </CollapseWrapper>\n                <CollapseWrapper title=\"React.Children.count\">\n                    <BlockQuoteWrapper>\n                        <p className=\"mt-3\">\n                            <code>React.Children.count(children)</code>\n                            <br />\n                            Возвращает общее количество компонентов в children,\n                            равное количеству вызовов callback, переданного в\n                            React.Children.map, которые будут совершены.\n                        </p>\n                    </BlockQuoteWrapper>\n                </CollapseWrapper>\n                <CollapseWrapper title=\"React.Children.toArray\">\n                    <BlockQuoteWrapper>\n                        <p className=\"mt-3\">\n                            <code>React.Children.toArray(children)</code>\n                            <br />\n                            Возвращает непрозрачную структуру данных children в\n                            виде плоского массива с ключами, заданные каждому\n                            дочернему элементу. Полезно, если вы хотите\n                            манипулировать коллекциями потомков в ваших методах\n                            рендера, особенно если вы хотите отсортировать или\n                            извлечь часть this.props.children перед её передачей\n                            куда-либо.\n                        </p>\n                    </BlockQuoteWrapper>\n                </CollapseWrapper>\n            </CollapseWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n\n            <ReactChildrenExample />\n            <Divider />\n            <Subtitle>Упражнения</Subtitle>\n            <ChildrenExercise />\n        </>\n    );\n};\n\nexport default ReactChildren;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst UseCallBackExample = () => {\n  const [data, setData] = useState({});\n  const withOutCallback = useRef(0);\n  const withCallback = useRef(0);\n\n  const handleChange = ({ target }) => {\n    setData(prevState => ({ ...prevState, [target.name]: target.value }));\n  };\n\n  // with out callback\n  const validateWithOutCallback = data => {\n    console.log(data);\n  };\n  useEffect(() => {\n    withOutCallback.current++;\n  }, [validateWithOutCallback]);\n\n  // with callback\n  const validateWithCallback = useCallback(data => {\n    console.log(data);\n  }, []);\n  useEffect(() => {\n    withCallback.current++;\n  }, [validateWithCallback]);\n\n  useEffect(() => {\n    validateWithOutCallback(data);\n    validateWithCallback(data);\n  }, [data]);\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Example</SmallTitle>\n      <p>{`Render count: ${withOutCallback.current}`}</p>\n      <p>{`Render count: ${withCallback.current}`}</p>\n      <form action=\"\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={data.email || \"\"}\n          onChange={handleChange}\n          className=\"me-2\"\n        />\n      </form>\n    </CardWrapper>\n  );\n};\n\nexport default UseCallBackExample;\n","import Collapse from \"../components/common/collapse\";\nimport React from \"react\";\nimport UseCallBackExample from \"../components/examples/useCallback/useCallBackExample.jsx\";\nimport BlockQuoteWrapper from \"../components/common/blockQuote\";\nimport CardWrapper from \"../components/common/Card\";\nimport Divider from \"../components/common/divider\";\nimport Title from \"../components/common/typografy/title\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\n\nconst UseCalbackExample = () => {\n    return (\n        <>\n            <Title>useCallback</Title>\n\n            <Collapse title=\"Информация\">\n                <BlockQuoteWrapper>\n                    <p>\n                        Аргументы: callBack , [array of dependencies]\n                        <br />\n                        Возвращает: Закэшированное значение выполненной функции,\n                        которое обновляется только при изменении зависимостей.\n                    </p>\n\n                    <figcaption>\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuoteWrapper>\n            </Collapse>\n\n            <CardWrapper>\n                <i className=\"bi bi-lightbulb\"></i>{\" \"}\n                <code>useCallback(fn, deps)</code> ~{\" \"}\n                <code>useMemo(() =&gt; fn, deps)</code>\n            </CardWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n            <UseCallBackExample />\n        </>\n    );\n};\n\nexport default UseCalbackExample;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst factorial = n => (n ? n * factorial(n - 1) : 1);\nconst runFactorial = n => {\n  console.log(\"run factorial\");\n  return factorial(n);\n};\n\nconst ComplexCalculateExample = () => {\n  const [value, setValue] = useState(100);\n  const fact = useMemo(() => runFactorial(value), [value]);\n  const [otherState, setOtherState] = useState(false);\n\n  const buttonColor = otherState ? \"danger\" : \"success\";\n  useEffect(() => console.log(\"render button color\"), [buttonColor]);\n\n  return (\n    <>\n      <CardWrapper>\n        <SmallTitle>Кэширование сложных вычислений</SmallTitle>\n        <p>value: {value}</p>\n        <p>Result: {fact}</p>\n        <button\n          type=\"button\"\n          onClick={() => setValue(prevState => prevState + 10)}\n          className=\"btn btn-primary mx-1\"\n        >\n          Increment\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setValue(prevState => prevState - 10)}\n          className=\"btn btn-primary mx-1\"\n        >\n          Decrement\n        </button>\n      </CardWrapper>\n      <CardWrapper>\n        <SmallTitle>Зависимость от сторонних setState</SmallTitle>\n        <button\n          onClick={() => setOtherState(prevState => !prevState)}\n          type=\"button\"\n          className={\"btn btn-\" + buttonColor}\n        >\n          Change color\n        </button>\n      </CardWrapper>\n    </>\n  );\n};\n\nexport default ComplexCalculateExample;\n","import React from \"react\";\nimport CollapseWrapper from \"../components/common/collapse\";\nimport ComplexCalculateExample from \"../components/examples/useMemo/complexCalculate\";\nimport BlockQuote from \"../components/common/blockQuote\";\nimport Title from \"../components/common/typografy/title\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport Divider from \"../components/common/divider\";\nconst UseMemoExample = () => {\n    return (\n        <>\n            <Title>useMemo</Title>\n            <CollapseWrapper title=\"Mеморизация\">\n                <BlockQuote>\n                    <p className=\"mt-2\">\n                        Мемоизация (англ. memoization от англ. memory и англ.\n                        optimization) — в программировании сохранение\n                        результатов выполнения функций для предотвращения\n                        повторных вычислений. Это один из способов оптимизации,\n                        применяемый для увеличения скорости выполнения\n                        компьютерных программ. Перед вызовом функции\n                        проверяется, вызывалась ли функция ранее:\n                    </p>\n                    <ul>\n                        <li>\n                            если не вызывалась, то функция вызывается, и\n                            результат её выполнения сохраняется;\n                        </li>\n                        <li>\n                            если вызывалась, то используется сохранённый\n                            результат.\n                        </li>\n                    </ul>\n                    <figcaption className=\"blockquote-footer\">\n                        <cite title=\"Wiki\">Wiki</cite>\n                    </figcaption>\n                </BlockQuote>\n            </CollapseWrapper>\n            <CollapseWrapper>\n                <BlockQuote>\n                    <p>\n                        <code>useMemo</code> Возвращает мемоизированное значение\n                    </p>\n                    <p>\n                        Передайте «создающую» функцию и массив зависимостей.\n                        useMemo будет повторно вычислять мемоизированное\n                        значение только тогда, когда значение какой-либо из\n                        зависимостей изменилось. Эта оптимизация помогает\n                        избежать дорогостоящих вычислений при каждом рендере.\n                    </p>\n                    <figcaption>\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuote>\n            </CollapseWrapper>\n            <Divider />\n            <Subtitle>Examples</Subtitle>\n            <ComplexCalculateExample />\n        </>\n    );\n};\n\nexport default UseMemoExample;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport Divider from \"../../common/divider\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nconst PrevStateExample = () => {\n  const prevState = useRef(\"\");\n  const [currentState, setCurrentState] = useState(\"false\");\n  useEffect(() => {\n    prevState.current = currentState;\n  }, [currentState]);\n\n  const handleChangeState = () => {\n    setCurrentState(prevState => (prevState === \"false\" ? \"true\" : \"false\"));\n  };\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Предыдущее состояние</SmallTitle>\n      <Divider />\n      <p>{`prev state: ${prevState.current}`}</p>\n      <p>{`current state: ${currentState}`}</p>\n      <button type=\"button\" onClick={handleChangeState} className=\"btn btn-primary\">\n        change state\n      </button>\n    </CardWrapper>\n  );\n};\n\nexport default PrevStateExample;\n","import React, { useRef } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport Divider from \"../../common/divider\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nconst ProgrammablActionsExample = () => {\n  const inputRef = useRef();\n  const handleClick = () => {\n    inputRef.current.focus();\n  };\n  const handleLargeSize = () => {\n    inputRef.current.style.width = \"80%\";\n  };\n  const handleSmallSize = () => {\n    inputRef.current.style.width = \"20%\";\n  };\n\n  return (\n    <CardWrapper>\n      <SmallTitle className=\"card-title\">Программируемые действия и свойства</SmallTitle>\n      <Divider />\n      <form action=\"\">\n        <label htmlFor=\"email\">Email</label>\n        <input ref={inputRef} type=\"email\" id=\"email\" className=\"me-2\" />\n        <button type=\"button\" onClick={handleClick} className=\"btn btn-primary\">\n          set focus\n        </button>\n        <button type=\"button\" onClick={handleLargeSize} className=\"btn btn-danger\">\n          set large size\n        </button>\n        <button type=\"button\" onClick={handleSmallSize} className=\"btn btn-success\">\n          set small size\n        </button>\n      </form>\n    </CardWrapper>\n  );\n};\n\nexport default ProgrammablActionsExample;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport Divider from \"../../common/divider\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\n\nconst RenderCountExample = () => {\n  const renderCount = useRef(0);\n  const [otherState, setOtherState] = useState(false);\n  useEffect(() => {\n    renderCount.current++;\n  }, [otherState]);\n\n  const handleClick = () => {\n    setOtherState(prevState => !prevState);\n  };\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Подсчет количесва рендеров</SmallTitle>\n      <Divider />\n      <p>{`render count: ${renderCount.current}`}</p>\n      <button type=\"button\" onClick={handleClick} className=\"btn btn-primary\">\n        change other state\n      </button>\n    </CardWrapper>\n  );\n};\n\nexport default RenderCountExample;\n","import React, { useRef } from \"react\";\nimport CollapseWrapper from \"../common/collapse\";\nconst UseRefExercise = () => {\n  const blockRef = useRef(\"Блок\");\n\n  const handleSizeAndContentBlock = () => {\n    blockRef.current.style.width = \"80px\";\n    blockRef.current.style.height = \"150px\";\n    blockRef.current.textContent = \"text\";\n  };\n\n  return (\n    <CollapseWrapper title=\"Упражнение\">\n      <p className=\"mt-3\">\n        У вас есть блок, у которого заданы ширина и высота. Добавьте кнопку, при нажатии которой\n        изменятся следующие свойства:\n      </p>\n      <ul>\n        <li>Изменится содежимое блока на &quot;text&quot;</li>\n        <li>высота и ширина станут равны 150 и 80 соответственно</li>\n      </ul>\n      <div\n        ref={blockRef}\n        className=\"bg-primary d-flex flex-row justify-content-center align-items-center rounded mb-2\"\n        style={{\n          height: 40,\n          width: 60,\n          color: \"white\"\n        }}\n      >\n        <small>Блок</small>\n      </div>\n      <button type=\"button\" onClick={handleSizeAndContentBlock} className=\"btn btn-success\">\n        Change size and content\n      </button>\n    </CollapseWrapper>\n  );\n};\n\nexport default UseRefExercise;\n","import React from \"react\";\nimport BlockQuote from \"../components/common/blockQuote\";\nimport CollapseWrapper from \"../components/common/collapse\";\nimport Divider from \"../components/common/divider\";\nimport Subtitle from \"../components/common/typografy/subtitle\";\nimport Title from \"../components/common/typografy/title\";\nimport PrevStateExample from \"../components/examples/useRef/prevState\";\nimport ProgrammablActionsExample from \"../components/examples/useRef/programmablActions\";\nimport RenderCountExample from \"../components/examples/useRef/renderCount\";\nimport UseRefExercise from \"../components/exercises/useRefExercise\";\nconst UseRefExample = () => {\n    return (\n        <>\n            <Title>useRef</Title>\n            <CollapseWrapper>\n                <BlockQuote>\n                    <p>\n                        <code>useRef</code> возвращает изменяемый ref-объект,\n                        свойство\n                        <code>.current</code> которого инициализируется\n                        переданным аргументом <code>(initialValue)</code>.\n                        Возвращённый объект будет сохраняться в течение всего\n                        времени жизни компонента.\n                    </p>\n\n                    <figcaption className=\"blockquote-footer\">\n                        <cite title=\"reactjs.org\">reactjs.org</cite>\n                    </figcaption>\n                </BlockQuote>\n            </CollapseWrapper>\n            <Divider />\n            <div>\n                <Subtitle>Examples</Subtitle>\n                <RenderCountExample />\n                <PrevStateExample />\n                <ProgrammablActionsExample />\n            </div>\n            <Divider />\n            <div>\n                <Subtitle>Упражнения</Subtitle>\n                <UseRefExercise />\n            </div>\n        </>\n    );\n};\n\nexport default UseRefExample;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport ContainerWrapper from \"./components/common/container\";\nimport NavBar from \"./components/ui/navBar\";\nimport CloneElementExample from \"./layouts/cloneElement\";\nimport HOCLayout from \"./layouts/hoc\";\nimport Main from \"./layouts/main\";\nimport MemoExample from \"./layouts/memo\";\nimport ReactChildren from \"./layouts/reactChildren\";\nimport UseCalbackExample from \"./layouts/useCallback\";\nimport UseMemoExample from \"./layouts/useMemo\";\nimport UseRefExample from \"./layouts/useRef\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <ContainerWrapper>\n        <Switch>\n          <Route path=\"/extended-hooks/useCallback\" component={UseCalbackExample} />\n          <Route path=\"/extended-hooks/memo\" component={MemoExample} />\n          <Route path=\"/extended-hooks/useMemo\" component={UseMemoExample} />\n          <Route path=\"/extended-hooks/cloneElement\" component={CloneElementExample} />\n          <Route path=\"/extended-hooks/hoc\" component={HOCLayout} />\n          <Route path=\"/extended-hooks/children\" component={ReactChildren} />\n          <Route path=\"/extended-hooks/useRef\" component={UseRefExample} />\n          <Route path=\"/extended-hooks\" exact component={Main} />\n          <Redirect to=\"/extended-hooks\" />\n        </Switch>\n      </ContainerWrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}